//import {isValidSudoku} from "../sudoku";
const isValidSudoku = require("../sudoku");

describe("isValidSudoku", () => {
    describe("Validate Board", () => {
        it("should return true given a valid board", () => {
            const gameBoard1 = 
            [["3","1",".",".","7",".",".",".","."]
            ,["6","2",".","1","9","5",".",".","."]
            ,[".","9","8",".",".",".",".",".","."]
            ,["8",".",".",".","6",".",".",".","3"]
            ,["4",".",".","8",".","3",".",".","1"]
            ,["7",".",".",".","2",".",".",".","6"]
            ,[".","6",".",".",".",".","2","8","."]
            ,[".",".",".","4","1","9",".",".","5"]
            ,[".",".",".",".","8",".",".","7","9"]];

            expect(isValidSudoku(gameBoard1)).toEqual(true);
        });

        it("should return false given an invalid board (invalid row)", () => {
            const gameBoard1 = 
            [["3","1","1",".","7",".",".",".","."]
            ,["6","2",".","1","9","5",".",".","."]
            ,[".","9","8",".",".",".",".",".","."]
            ,["8",".",".",".","6",".",".",".","3"]
            ,["4",".",".","8",".","3",".",".","1"]
            ,["7",".",".",".","2",".",".",".","6"]
            ,[".","6",".",".",".",".","2","8","."]
            ,[".",".",".","4","1","9",".",".","5"]
            ,[".",".",".",".","8",".",".","7","9"]];

            expect(isValidSudoku(gameBoard1)).toEqual(false);
        });

        it("should return false given an invalid board (invalid column)", () => {
            const gameBoard1 = 
            [["3","1",".",".","7",".",".",".","."]
            ,["6","2",".","1","9","5",".",".","."]
            ,[".","9","8",".",".",".",".",".","."]
            ,["8",".",".",".","6",".",".",".","3"]
            ,["4",".",".","8",".","3",".",".","1"]
            ,["7",".",".",".","2",".",".",".","6"]
            ,[".","6",".",".",".",".","2","8","."]
            ,[".",".",".","4","1","9",".",".","5"]
            ,["3",".",".",".","8",".",".","7","9"]];

            expect(isValidSudoku(gameBoard1)).toEqual(false);
        });

        it("should return false given an invalid board (invalid square)", () => {
            const gameBoard1 = 
            [["3","1",".",".","7",".",".",".","."]
            ,["6","2","3","1","9","5",".",".","."]
            ,[".","9","8",".",".",".",".",".","."]
            ,["8",".",".",".","6",".",".",".","3"]
            ,["4",".",".","8",".","3",".",".","1"]
            ,["7",".",".",".","2",".",".",".","6"]
            ,[".","6",".",".",".",".","2","8","."]
            ,[".",".",".","4","1","9",".",".","5"]
            ,[".",".",".",".","8",".",".","7","9"]];

            expect(isValidSudoku(gameBoard1)).toEqual(false);
        });
    });
});